Use cGeocodeConnector.pkg

Class cBingMapsConnector is a cGeocodeConnector
    
    Procedure Construct_Object
        Forward Send Construct_Object
        
        Set psHost      to "dev.virtualearth.net"
        Set psPath      to "REST/v1/Locations"
        Set psKey       to (Config("tokens.bingMapsKey"))
        Set psName      to "Bing Maps"
        Set psID        to "BINGMAPS"
        Set psWebSite   to "https://www.bing.com/maps"
    End_Procedure
    
    Function CallPath String sPath String sKey String sQuery returns String
        Function_Return (sPath + "?" + sQuery + "&" + "key=" + sKey)
    End_Function

    Function FreeQuery String sQuery Returns Handle
        Handle hoJson
        
        Move (Replaces(" ", sQuery, "%20")) to sQuery
        Move ("q=" + sQuery)                to sQuery
        Get DoGeoQuery sQuery               to hoJson
        
        Function_Return hoJson
    End_Function
    
    Function StructuredQuery String[] asParams Returns Handle
        String   sQuery
        String[] asQuery
        Handle   hoJson
        
        Move (sQuery + "countryRegion="  + asParams[0])                 to sQuery
        Move (sQuery + "&adminDistrict=" + asParams[3])                 to sQuery
        Move (sQuery + "&locality="      + asParams[4])                 to sQuery
        Move (sQuery + "&postalCode="    + asParams[1])                 to sQuery
        Move (sQuery + "&addressLine="   + asParams[6] * asParams[5])   to sQuery

        Move (Replaces(" ", sQuery, "%20"))                             to sQuery

        Get DoGeoQuery sQuery                                           to hoJson
        
        Function_Return hoJson
    End_Function
    
    Function PostcodeQuery String sCountry String sPostcode Returns Handle
        String  sQuery sHouse
        Integer iArg
        Handle  hoJson
        
        If (num_arguments > 2) Begin
            Move 3 to iArg
            Move iArg& to sHouse
        End
        
        Move (sQuery + "countryRegion=" + sCountry)     to sQuery
        Move (sQuery + "&postalCode="    + sPostcode)   to sQuery
        Move (sQuery + "&addressLine"   + sHouse)       to sQuery
        
        Move (Replaces(" ", sQuery, "%20"))             to sQuery
        
        Get DoGeoQuery sQuery                           to hoJson
        
        Function_Return hoJson
    End_Function
    
    Procedure ExtractData Handle hoJson
        Number nLat nLng
        Handle hoBox
        Number[] anBox
        
        Set pnLat to (ValueAtPath(oJPath(Self), hoJson, "resourceSets[0].resources[0].point.coordinates[0]"))
        Set pnLng to (ValueAtPath(oJPath(Self), hoJson, "resourceSets[0].resources[0].point.coordinates[1]"))
        
        Move (ValueAtPath(oJPath(Self), hoJson, "resourceSets[0].resources[0].bbox[0]")) to anBox[0]
        Move (ValueAtPath(oJPath(Self), hoJson, "resourceSets[0].resources[0].bbox[1]")) to anBox[1]
        Move (ValueAtPath(oJPath(Self), hoJson, "resourceSets[0].resources[0].bbox[2]")) to anBox[2]
        Move (ValueAtPath(oJPath(Self), hoJson, "resourceSets[0].resources[0].bbox[3]")) to anBox[3]

        Set panBoundingBox to anBox

        Set psDisplayName to (ValueAtPath(oJPath(Self), hoJson, "resourceSets[0].resources[0].name"))
    End_Procedure
    
    Procedure DrawMap Handle hoJson Handle hoMap
        Number[]  anBox
        stPolygon tBox
        String    sName
        
        If not hoMap ;
            Procedure_Return
        If (pnLat(Self) = 100) ;
            Procedure_Return

        Forward Send DrawMap hoJson hoMap

        Get panBoundingBox to anBox
        
        If (SizeOfArray(anBox) = 4) Begin
            Move anBox[0]   to tBox.aPoints[0][0]
            Move anBox[1]   to tBox.aPoints[0][1]
            
            Move anBox[0]   to tBox.aPoints[1][0]
            Move anBox[3]   to tBox.aPoints[1][1]
            
            Move anBox[2]   to tBox.aPoints[2][0]
            Move anBox[3]   to tBox.aPoints[2][1]
            
            Move anBox[2]   to tBox.aPoints[3][0]
            Move anBox[1]   to tBox.aPoints[3][1]
            
            Move (Config("defaults.polygon.lineColor"))     to tBox.sLineColor
            Move (Config("defaults.polygon.lineWeight"))    to tBox.iLineWeight
            Move (Config("defaults.polygon.lineOpacity"))   to tBox.nLineOpacity
            Move (Config("defaults.polygon.fillColor"))     to tBox.sFillColor
            Move (Config("defaults.polygon.fillOpacity"))   to tBox.nFillOpacity
            
            Move True to tBox.bStroke
            Move (pbFitMap(Self)) to tBox.bFitMap
            
            Send DrawPolygon of hoMap tBox
        End
        
    End_Procedure

End_Class