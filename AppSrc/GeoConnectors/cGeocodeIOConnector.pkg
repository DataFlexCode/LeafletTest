Use cGeocodeConnector.pkg

Class cGeocodeIOConnector is a cGeocodeConnector
    
    Procedure Construct_Object
        Forward Send Construct_Object
        Set psHost      to "api.geocod.io"
        Set psPath      to "v1.6/geocode"
        Set psKey       to (Config("tokens.geocodeIOKey"))
        Set psName      to "Geocode IO"
        Set psID        to "GEOCODEIO"
        Set psWebSite   to "https://www.geocod.io/"
        
        // Position Stack free plan doesn't use HTTPS, so:
        Set piRemotePort    of oHttp to rpHttp
        Set peTransferFlags of oHttp to 0
    End_Procedure
    
    Function FreeQuery String sQuery Returns Handle
        Handle  hoJson
        Boolean bOK
        
        Move (Replaces(" ", sQuery, "%20")) to sQuery
        Move ("q=" + sQuery)                to sQuery
        Get DoGeoQuery sQuery               to hoJson
        
        Function_Return hoJson
    End_Function
    
    Function StructuredQuery String[] asParams Returns Handle
        String[] asQuery
        String   sQuery
        Handle   hoJson
        
        If (asParams[6] <> "") ;
        Move (asParams[6] * asParams[5])        to  asParams[5]
        If (asParams[5] <> "") ;
            Move ("street=" + asParams[5])      to asQuery[SizeOfArray(asQuery)]
        If (asParams[4] <> "") ;
            Move ("city=" + asParams[4])        to asQuery[SizeOfArray(asQuery)]
        If (asParams[2] <> "") ;
            Move ("state=" + asParams[2])       to asQuery[SizeOfArray(asQuery)]
        If (asParams[1] <> "") ;
            Move ("postal_code=" + asParams[1]) to asQuery[SizeOfArray(asQuery)]
        If (asParams[0] <> "") ;
            Move ("country=" + asParams[0])     to asQuery[SizeOfArray(asQuery)]
        
        Move (StrJoinFromArray(asQuery, "&"))   to sQuery
        Move (Replaces(" ", sQuery, "%20"))     to sQuery
        Get DoGeoQuery sQuery                   to hoJson
        
        Function_Return hoJson
    End_Function
    
    Function PostcodeQuery String sCountry String sPostcode Returns Handle
        String  sQuery
        Handle  hoJson
        
        Move ("postal_code=" + sPostcode + "&country=" + sCountry)  to sQuery
        Move (Replaces(" ", sQuery, "%20"))     to sQuery
        Get DoGeoQuery sQuery                                       to hoJson
        
        Function_Return hoJson
    End_Function
    
    Procedure ExtractData Handle hoJson
        Number nLat nLng
        Handle hoBox
        Number[] anBox
        
        Set pnLat to (ValueAtPath(oJPath(Self), hoJson, "results.[0].location.lat"))
        Set pnLng to (ValueAtPath(oJPath(Self), hoJson, "results.[0].location.lng"))

        Set psDisplayName to (ValueAtPath(oJPath(Self), hoJson, "results.[0].formatted_address"))
    End_Procedure
    
    Procedure DrawMap Handle hoJson Handle hoMap
        Number[]  anBox
        stPolygon tBox
        String    sName
        
        If not hoMap ;
            Procedure_Return
        If (pnLat(Self) = 100) ;
            Procedure_Return

        Forward Send DrawMap hoJson hoMap

        Send DrawMap of hoMap (pnLat(Self)) (pnLng(Self)) (piZoom(Self)) (piMaxZoom(Self))
    End_Procedure
    
End_Class