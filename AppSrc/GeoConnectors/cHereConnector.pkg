Use cGeocodeConnector.pkg

Class cHereConnector is a cGeocodeConnector
    
    Procedure Construct_Object
        Forward Send Construct_Object
        
        Set psHost      to "geocoder.ls.hereapi.com"
        Set psPath      to "6.2/geocode.json"
        Set psKey       to (Config("tokens.hereKey"))
        Set psName      to "Here Geocoding"
        Set psID        to "HERE"
        Set psWebSite   to "https://www.here.com/"
        
        Property Number[] panBoundingBox
    End_Procedure
    
    Function FreeQuery String sQuery Returns Handle
        Handle  hoJson
        Boolean bOK
        
        Move (Replaces(" ", sQuery, "%20")) to sQuery
        Move ("searchtext=" + sQuery)       to sQuery
        Get DoGeoQuery sQuery               to hoJson
        
        Function_Return hoJson
    End_Function
    
    Function StructuredQuery String[] asParams Returns Handle
        String   sQuery
        String[] asQuery
        Handle   hoJson
        
        If (asParams[6] <> "") ;
            Move ("housenumber=" + asParams[6]) to asQuery[SizeOfArray(asQuery)]
        If (asParams[5] <> "") ;
            Move ("street="      + asParams[5]) to asQuery[SizeOfArray(asQuery)]
        If (asParams[4] <> "") ;
            Move ("city="        + asParams[4]) to asQuery[SizeOfArray(asQuery)]
        If (asParams[0] <> "") ;
            Move ("country="     + asParams[0]) to asQuery[SizeOfArray(asQuery)]

        Move (StrJoinFromArray(asQuery, "&"))   to sQuery
        Move (Replaces(" ", sQuery, "%20"))     to sQuery
        Get DoGeoQuery sQuery                   to hoJson
        
        Function_Return hoJson
    End_Function
    
    Procedure ExtractData Handle hoJson
        Number[] anBox
        
        Set pnLat to (ValueAtPath(oJPath(Self), hoJson, "Response.View[0].Result[0].Location.DisplayPosition.Latitude"))
        Set pnLng to (ValueAtPath(oJPath(Self), hoJson, "Response.View[0].Result.[0]Location.DisplayPosition.Longitude"))
        Set psDisplayName to (ValueAtPath(oJPath(Self), hoJson, "Response.View[0].Result[0].Location.Address.Label"))
        
        Move (ValueAtPath(oJPath(Self), hoJson, "Response.View[0].Result[0].Location.MapView.TopLeft.Latitude"))         to anBox[0]
        Move (ValueAtPath(oJPath(Self), hoJson, "Response.View[0].Result[0].Location.MapView.TopLeft.Longitude"))        to anBox[1]
        Move (ValueAtPath(oJPath(Self), hoJson, "Response.View[0].Result[0].Location.MapView.BottomRight.Latitude"))     to anBox[2]
        Move (ValueAtPath(oJPath(Self), hoJson, "Response.View[0].Result[0].Location.MapView.BottomRight.Longitude"))    to anBox[3]
        
        Set panBoundingBox to anBox
    End_Procedure
    
    Procedure DrawMap Handle hoJson Handle hoMap
        Number[]  anBox
        stPolygon tBox
        String    sName
        
        If not hoMap ;
            Procedure_Return
        If (pnLat(Self) = 100) ;
            Procedure_Return

        // ToDo: work out correct zoom from bounding box maybe?
        Forward Send DrawMap hoJson hoMap

        Send DrawMap of hoMap (pnLat(Self)) (pnLng(Self)) (piZoom(Self)) (piMaxZoom(Self))
        
        Get panBoundingBox to anBox
        
        If (SizeOfArray(anBox) = 4) Begin
            Move anBox[0]   to tBox.aPoints[0][0]
            Move anBox[1]   to tBox.aPoints[0][1]
            
            Move anBox[2]   to tBox.aPoints[1][0]
            Move anBox[1]   to tBox.aPoints[1][1]
            
            Move anBox[2]   to tBox.aPoints[2][0]
            Move anBox[3]   to tBox.aPoints[2][1]
            
            Move anBox[0]   to tBox.aPoints[3][0]
            Move anBox[3]   to tBox.aPoints[3][1]
            
            Move (Config("defaults.polygon.lineColor"))     to tBox.sLineColor
            Move (Config("defaults.polygon.lineWeight"))    to tBox.iLineWeight
            Move (Config("defaults.polygon.lineOpacity"))   to tBox.nLineOpacity
            Move (Config("defaults.polygon.fillColor"))     to tBox.sFillColor
            Move (Config("defaults.polygon.fillOpacity"))   to tBox.nFillOpacity
            
            Move True to tBox.bStroke
            Move (pbFitMap(Self)) to tBox.bFitMap

            Send DrawPolygon of hoMap tBox
        End
        
    End_Procedure
    
End_Class